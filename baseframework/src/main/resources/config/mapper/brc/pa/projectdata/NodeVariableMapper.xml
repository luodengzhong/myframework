<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brc.pa.projectdata.mapper.NodeVariableMapper">
	<insert id="insert" parameterType="nodeVariable">
		INSERT INTO PA_NODE_VARIABLE(NODE_VARIABLE_ID, VARIABLE_DEFINE_ID, SEQUENCE, BIZ_KIND_ID, BIZ_ID, VERSION)
		VALUES(PA_ID_SEQ.nextval,${variableDefineId}, ${sequence}, ${bizKindId}, ${bizId}, PA_VERSION_SEQ.nextval)
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO PA_NODE_VARIABLE(NODE_VARIABLE_ID, VARIABLE_DEFINE_ID, SEQUENCE, BIZ_KIND_ID, BIZ_ID, VERSION)
		SELECT PA_ID_SEQ.nextval,t.*,PA_VERSION_SEQ.nextval
		FROM (
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT ${item.variableDefineId} as VARIABLE_DEFINE_ID, ${item.sequence} as SEQUENCE,
			${item.bizKindId} as BIZ_KIND_ID, ${item.bizId} as BIZ_ID FROM DUAL
		</foreach>
		) t
	</insert>


	<delete id="delete" parameterType="java.lang.Long">
		DELETE FROM PA_NODE_VARIABLE WHERE NODE_VARIABLE_ID = #{nodeVariableId}
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM PA_NODE_VARIABLE WHERE NODE_VARIABLE_ID IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="update" parameterType="nodeVariable">
		UPDATE PA_NODE_VARIABLE
		<set>
			<if test="variableDefineId != null">
				VARIABLE_DEFINE_ID=${variableDefineId},
			</if>
			<if test="sequence != null">
				SEQUENCE=${sequence},
			</if>
			<if test="bizKindId != null">
				BIZ_KIND_ID=${bizKindId},
			</if>
			<if test="bizId != null">
				BIZ_ID=${bizId},
			</if>
			<if test="variableValue != null">
				VARIABLE_VALUE = #{variableValue}
			</if>
		</set>
		WHERE NODE_VARIABLE_ID = #{nodeVariableId}
	</update>

	<update id="updateSequence" parameterType="nodeVariable">
		UPDATE PA_NODE_VARIABLE SET SEQUENCE = ${sequence} WHERE NODE_VARIABLE_ID = ${nodeVariableId}
	</update>

	<select id="load" parameterType="java.lang.Long">
		SELECT NODE_VARIABLE_ID as nodeVariableId, VARIABLE_DEFINE_ID as variableDefineId ,SEQUENCE as sequence,BIZ_KIND_ID as
		bizKindId,BIZ_ID as bizId FROM
		PA_NODE_VARIABLE WHERE NODE_VARIABLE_ID = ${nodeVariableId}
	</select>

	<select id="queryAll" parameterType="java.util.Map" resultType="nodeVariable">
		SELECT t.NODE_VARIABLE_ID as nodeVariableId, t.VARIABLE_DEFINE_ID as variableDefineId,t.SEQUENCE as
		sequence,t.BIZ_KIND_ID as bizKindId,t.BIZ_ID as
		bizId,t1.code as variableCode,
		t1.name as variableName,t1.description as description
		FROM PA_NODE_VARIABLE t,PA_VARIABLE_DEFINE t1
		<where>
			t.variable_define_id = t1.variable_define_id
			<if test="variableDefineId != null and variableDefineId > 0">
				AND t.VARIABLE_DEFINE_ID = ${variableDefineId}
			</if>
			<if test="bizKindId != null and bizKindId > 0">
				AND t.BIZ_KIND_ID = ${bizKindId}
			</if>
			<if test="bizId != null and bizId > 0">
				AND t.BIZ_ID=${bizId}
			</if>
			<if test="variableName != null">
				AND t1.NAME like concat(concat('%',#{variableName}),'%')
			</if>
			<if test="variableCode != null">
				AND t1.CODE like concat(concat('%',#{variableCode}),'%')
			</if>
		</where>
		ORDER BY SEQUENCE ASC
	</select>

	<select id="slicedQuery" parameterType="java.util.Map" resultType="nodeVariable">
		<!-- SELECT t.NODE_VARIABLE_ID as nodeVariableId, t.VARIABLE_DEFINE_ID as variableDefineId,t.SEQUENCE as sequence,t.BIZ_KIND_ID as bizKindId,t.BIZ_ID as bizId,t1.code 
			as variableCode, t1.name as variableName,t1.description as description FROM PA_NODE_VARIABLE t,PA_VARIABLE_DEFINE t1 ORDER BY ${sortname} ${sortorder} OFFSET (${page}-1)*${pagesize} 
			ROWS FETCH NEXT ${pagesize} ROWS ONLY -->
		SELECT NODE_VARIABLE_ID as nodeVariableId, VARIABLE_DEFINE_ID as variableDefineId, SEQUENCE as sequence, BIZ_KIND_ID as bizKindId, BIZ_ID as bizId, VERSION as
		version,variableCode,variableName,description as description
		FROM (select t.NODE_VARIABLE_ID, t.VARIABLE_DEFINE_ID, t.SEQUENCE, t.BIZ_KIND_ID, t.BIZ_ID, t.VERSION,t1.code as variableCode,t1.name as variableName,t1.description,ROWNUM RN FROM PA_NODE_VARIABLE t,PA_VARIABLE_DEFINE t1
		<where>
			t.variable_define_id = t1.variable_define_id
			<if test="variableDefineId != null and variableDefineId > 0">
				AND t.VARIABLE_DEFINE_ID = ${variableDefineId}
			</if>
			<if test="bizKindId != null and bizKindId > 0">
				AND t.BIZ_KIND_ID = ${bizKindId}
			</if>
			<if test="bizId != null and bizId > 0">
				AND t.BIZ_ID=${bizId}
			</if>
			<if test="variableName != null">
				AND t1.NAME like concat(concat('%',#{variableName}),'%')
			</if>
			<if test="variableCode != null">
				AND t1.CODE like concat(concat('%',#{variableCode}),'%')
			</if>
		</where>
		ORDER BY ${sortname} ${sortorder}
		)
		WHERE RN > (${page}-1)*${pagesize} AND RN &lt;= ${page}*${pagesize}

	</select>

	<select id="getRecordCount" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT COUNT(0) FROM PA_NODE_VARIABLE t,PA_VARIABLE_DEFINE t1
		<where>
			t.variable_define_id = t1.variable_define_id
			<if test="variableDefineId != null and variableDefineId > 0">
				AND t.VARIABLE_DEFINE_ID = ${variableDefineId}
			</if>
			<if test="bizKindId != null and bizKindId > 0">
				AND t.BIZ_KIND_ID = ${bizKindId}
			</if>
			<if test="bizId != null and bizId > 0">
				AND t.BIZ_ID=${bizId}
			</if>
			<if test="variableName != null">
				AND t1.NAME like concat(concat('%',#{variableName}),'%')
			</if>
			<if test="variableCode != null">
				AND t1.CODE like concat(concat('%',#{variableCode}),'%')
			</if>
		</where>
	</select>

	<select id="getNextSequence" resultType="java.lang.Long">
		SELECT NVL(MAX(SEQUENCE),0) + 1 FROM PA_NODE_VARIABLE WHERE BIZ_ID = ${bizId} AND BIZ_KIND_ID=${bizKindId}
	</select>

</mapper>