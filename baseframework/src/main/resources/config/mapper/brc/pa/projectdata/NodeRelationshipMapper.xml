<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brc.pa.projectdata.mapper.NodeRelationshipMapper">
	<insert id="insert" parameterType="nodeRelationship">
		INSERT INTO PA_NODE_RELATIONSHIP(NODE_RELATIONSHIP_ID, RELATIONSHIP_KIND_ID, SEQUENCE, BIZ_KIND_ID, BIZ_ID, NODE_ID,
		VERSION)
		VALUES(PA_ID_SEQ.nextval,${relationshipKindId}, ${sequence}, ${bizKindId}, ${bizId}, ${nodeId}, PA_VERSION_SEQ.nextval)
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO PA_NODE_RELATIONSHIP(NODE_RELATIONSHIP_ID, RELATIONSHIP_KIND_ID, SEQUENCE, BIZ_KIND_ID, BIZ_ID, NODE_ID, VERSION)
		SELECT
		PA_ID_SEQ.nextval,t.*,PA_VERSION_SEQ.nextval FROM (
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT ${item.relationshipKindId} as RELATIONSHIP_KIND_ID, ${item.sequence} as
			SEQUENCE, ${item.bizKindId} as BIZ_KIND_ID, ${item.bizId} as BIZ_ID, ${item.nodeId}
			as NODE_ID FROM DUAL
		</foreach>
		) t
	</insert>

	<delete id="delete" parameterType="java.lang.Long">
		DELETE FROM PA_NODE_RELATIONSHIP WHERE NODE_RELATIONSHIP_ID = #{nodeRelationshipId}
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM PA_NODE_RELATIONSHIP WHERE NODE_RELATIONSHIP_ID IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<delete id="deleteByNodeId" parameterType="java.util.Map">
		DELETE FROM PA_NODE_RELATIONSHIP WHERE BIZ_ID = #{bizId} and Node_ID = #{nodeId}
	</delete>

	<update id="update" parameterType="nodeRelationship">
		UPDATE PA_NODE_RELATIONSHIP
		<set>
			<if test="relationshipKindId != null">
				RELATIONSHIP_KIND_ID=${relationshipKindId},
			</if>
			<if test="sequence != null">
				SEQUENCE=${sequence},
			</if>
			<if test="bizKindId != null">
				BIZ_KIND_ID=${bizKindId},
			</if>
			<if test="bizId != null">
				BIZ_ID=${bizId},
			</if>
			<if test="nodeId != null">
				NODE_ID=${nodeId},
			</if>
		</set>
		WHERE NODE_RELATIONSHIP_ID = #{nodeRelationshipId}
	</update>

	<update id="updateSequence" parameterType="nodeRelationship">
		UPDATE PA_NODE_RELATIONSHIP SET SEQUENCE = #{sequence}
		WHERE NODE_RELATIONSHIP_ID = #{nodeRelationshipId}
	</update>

	<select id="load" parameterType="java.lang.Long" resultType="nodeRelationship">
		SELECT NODE_RELATIONSHIP_ID as nodeRelationshipId, RELATIONSHIP_KIND_ID as
		relationshipKindId, SEQUENCE as sequence, BIZ_KIND_ID as bizKindId, BIZ_ID as bizId,
		NODE_ID as nodeId, VERSION as version FROM PA_NODE_RELATIONSHIP WHERE
		NODE_RELATIONSHIP_ID=#{nodeRelationshipId}
	</select>

	<select id="queryAll" parameterType="java.util.Map" resultType="nodeRelationship">
		SELECT NODE_RELATIONSHIP_ID as nodeRelationshipId, RELATIONSHIP_KIND_ID as relationshipKindId, SEQUENCE as sequence, BIZ_KIND_ID as bizKindId, BIZ_ID as
		bizId, NODE_ID as nodeId, VERSION as version FROM PA_NODE_RELATIONSHIP
		<where>
			<if test="relationshipKindId != null and relationshipKindId > -1 ">
				AND RELATIONSHIP_KIND_ID = #{relationshipKindId}
			</if>
			<if test="bizKindId != null and bizKindId > -1 ">
				AND BIZ_KIND_ID = #{bizKindId}
			</if>
			<if test="bizId != null and bizId > -1 ">
				AND BIZ_ID = #{bizId}
			</if>
			<if test="nodeId != null and nodeId > -1 ">
				AND NODE_ID = #{nodeId}
			</if>
		</where>
		ORDER BY NODE_RELATIONSHIP_ID ASC
	</select>

	<select id="slicedQuery" parameterType="java.util.Map" resultType="nodeRelationship">
		<!-- SELECT t.NODE_RELATIONSHIP_ID as nodeRelationshipId, t.RELATIONSHIP_KIND_ID as relationshipKindId, t.SEQUENCE as sequence, t.BIZ_KIND_ID as bizKindId, t.BIZ_ID 
			as bizId, t.NODE_ID as nodeId, t.VERSION as version FROM PA_NODE_RELATIONSHIP t ORDER BY ${sortname} ${sortorder} OFFSET (${page}-1)*${pagesize} ROWS FETCH NEXT 
			${pagesize} ROWS ONLY -->
		SELECT NODE_RELATIONSHIP_ID as nodeRelationshipId, RELATIONSHIP_KIND_ID as relationshipKindId, SEQUENCE as sequence, BIZ_KIND_ID as bizKindId, BIZ_ID as
		bizId, NODE_ID as nodeId, VERSION as version FROM (select t.NODE_RELATIONSHIP_ID, t.RELATIONSHIP_KIND_ID, t.SEQUENCE, t.BIZ_KIND_ID, t.BIZ_ID, t.NODE_ID, t.VERSION,ROWNUM RN FROM PA_NODE_RELATIONSHIP t
		<where>
			<if test="relationshipKindId != null and relationshipKindId > -1 ">
				AND t.RELATIONSHIP_KIND_ID = #{relationshipKindId}
			</if>
			<if test="bizKindId != null and bizKindId > -1 ">
				AND t.BIZ_KIND_ID = #{bizKindId}
			</if>
			<if test="bizId != null and bizId > -1 ">
				AND t.BIZ_ID = #{bizId}
			</if>
			<if test="nodeId != null and nodeId > -1 ">
				AND t.NODE_ID = #{nodeId}
			</if>
		</where>
		ORDER BY ${sortname} ${sortorder}
		)
		WHERE RN > (${page}-1)*${pagesize} AND RN &lt;= ${page}*${pagesize}

	</select>

	<select id="getRecordCount" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT COUNT(0) FROM PA_NODE_RELATIONSHIP t
		<where>
			<if test="relationshipKindId != null and relationshipKindId > -1 ">
				AND t.RELATIONSHIP_KIND_ID = #{relationshipKindId}
			</if>
			<if test="bizKindId != null and bizKindId > -1 ">
				AND t.BIZ_KIND_ID = #{bizKindId}
			</if>
			<if test="bizId != null and bizId > -1 ">
				AND t.BIZ_ID = #{bizId}
			</if>
			<if test="nodeId != null and nodeId > -1 ">
				AND t.NODE_ID = #{nodeId}
			</if>
		</where>
	</select>

	<select id="getNextSequence" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT NVL(MAX(SEQUENCE),0) + 1 FROM PA_NODE_RELATIONSHIP WHERE BIZ_ID = #{bizId}
		AND BIZ_KIND_ID = #{bizKindId} AND RELATIONSHIP_KIND_ID = #{relationshipKindId}
	</select>

	<update id="updateNodeId" parameterType="java.util.Map">
		UPDATE PA_NODE_RELATIONSHIP SET NODE_ID=${newProjectNodeId}
		WHERE NODE_ID=${oldProjectNodeId} AND BIZ_ID IN
		(SELECT PROJECT_NODE_ID FROM PA_PROJECT_NODE WHERE BIZ_ID=${bizId} AND BIZ_KIND_ID=${bizKindId})
	</update>

	<select id="queryAllByPhaseId" parameterType="java.util.Map" resultType="nodeRelationship">
		SELECT t.NODE_RELATIONSHIP_ID as nodeRelationshipId, t.RELATIONSHIP_KIND_ID as relationshipKindId, t.SEQUENCE as sequence, t.BIZ_KIND_ID as bizKindId,
		t.BIZ_ID as
		bizId, t.NODE_ID as nodeId, t.VERSION as version FROM PA_NODE_RELATIONSHIP t,PA_PROJECT_NODE n
		<where>
			t.BIZ_ID=n.PROJECT_NODE_ID
			<if test="relationshipKindId != null and relationshipKindId > -1 ">
				AND t.RELATIONSHIP_KIND_ID = #{relationshipKindId}
			</if>
			<if test="phaseId != null and phaseId > -1 ">
				AND n.PARENT_ID = #{phaseId}
			</if>
		</where>
		ORDER BY t.NODE_RELATIONSHIP_ID ASC
	</select>

</mapper>