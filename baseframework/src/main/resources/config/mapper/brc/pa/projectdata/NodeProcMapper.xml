<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brc.pa.projectdata.mapper.NodeProcMapper">
	<insert id="insert" parameterType="nodeProc">
		INSERT INTO PA_NODE_PROC(NODE_PROC_ID, PROC_KEY, BIZ_KIND_ID, BIZ_ID, SEQUENCE, VERSION)
		VALUES(PA_ID_SEQ.nextval,#{procKey, jdbcType=VARCHAR}, ${bizKindId}, ${bizId}, ${sequence}, PA_VERSION_SEQ.nextval)
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO PA_NODE_PROC(NODE_PROC_ID, PROC_KEY, BIZ_KIND_ID, BIZ_ID, SEQUENCE, VERSION)
		SELECT PA_ID_SEQ.nextval,t.*,PA_VERSION_SEQ.nextval FROM (
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT #{item.procKey, jdbcType=VARCHAR} as PROC_KEY, ${item.bizKindId} as BIZ_KIND_ID,
			${item.bizId} as BIZ_ID, ${item.sequence} as SEQUENCE FROM DUAL
		</foreach>
		) t
	</insert>


	<delete id="delete" parameterType="java.lang.Long">
		DELETE FROM PA_NODE_PROC WHERE NODE_PROC_ID = #{nodeProcId}
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM PA_NODE_PROC WHERE NODE_PROC_ID IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="update" parameterType="nodeProc">
		UPDATE PA_NODE_PROC
		<set>
			<if test="procKey != null">
				PROC_KEY=#{procKey, jdbcType=VARCHAR},
			</if>
			<if test="bizKindId != null">
				BIZ_KIND_ID=${bizKindId},
			</if>
			<if test="bizId != null">
				BIZ_ID=${bizId},
			</if>
			<if test="sequence != null">
				SEQUENCE=${sequence},
			</if>
		</set>
		WHERE NODE_PROC_ID = #{nodeProcId}
	</update>

	<update id="updateSequence" parameterType="nodeProc">
		UPDATE PA_NODE_PROC SET SEQUENCE = #{sequence}
		WHERE NODE_PROC_ID = #{nodeProcId}
	</update>

	<select id="load" parameterType="java.lang.Long" resultType="nodeProc">
		SELECT NODE_PROC_ID as nodeProcId, PROC_KEY as procKey, BIZ_KIND_ID as bizKindId, BIZ_ID as
		bizId, SEQUENCE as sequence, VERSION as version FROM PA_NODE_PROC WHERE
		NODE_PROC_ID=#{nodeProcId}
	</select>

	<select id="queryAll" parameterType="java.util.Map" resultType="nodeProc">
		SELECT NODE_PROC_ID as nodeProcId, PROC_KEY as procKey, BIZ_KIND_ID as bizKindId, BIZ_ID as bizId, SEQUENCE as sequence, VERSION as version FROM PA_NODE_PROC
		<where>
			<if test="procKey != null">
				AND PROC_KEY like concat(concat('%',#{procKey}),'%')
			</if>
			<if test="bizKindId != null and bizKindId > -1 ">
				AND BIZ_KIND_ID = #{bizKindId}
			</if>
			<if test="bizId != null and bizId > -1 ">
				AND BIZ_ID = #{bizId}
			</if>
		</where>
		ORDER BY NODE_PROC_ID ASC
	</select>

	<select id="slicedQuery" parameterType="java.util.Map" resultType="nodeProc">
		<!-- SELECT NODE_PROC_ID as nodeProcId, PROC_KEY as procKey, BIZ_KIND_ID as bizKindId, BIZ_ID as bizId, SEQUENCE as sequence, VERSION as version FROM PA_NODE_PROC 
			ORDER BY ${sortname} ${sortorder} OFFSET (${page}-1)*${pagesize} ROWS FETCH NEXT ${pagesize} ROWS ONLY -->
		SELECT NODE_PROC_ID as nodeProcId, PROC_KEY as procKey, BIZ_KIND_ID as bizKindId, BIZ_ID as bizId, SEQUENCE as sequence, VERSION as version FROM (select
		t.NODE_PROC_ID, t.PROC_KEY, t.BIZ_KIND_ID, t.BIZ_ID, t.SEQUENCE, t.VERSION,ROWNUM RN FROM PA_NODE_PROC t
		<where>
			<if test="procKey != null">
				AND PROC_KEY like concat(concat('%',#{procKey}),'%')
			</if>
			<if test="bizKindId != null and bizKindId > -1 ">
				AND BIZ_KIND_ID = #{bizKindId}
			</if>
			<if test="bizId != null and bizId > -1 ">
				AND BIZ_ID = #{bizId}
			</if>
		</where>
		ORDER BY ${sortname} ${sortorder}
		)
		WHERE RN > (${page}-1)*${pagesize} AND RN &lt;= ${page}*${pagesize}

	</select>

	<select id="getRecordCount" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT COUNT(0) FROM PA_NODE_PROC
		<where>
			<if test="procKey != null">
				AND PROC_KEY like concat(concat('%',#{procKey}),'%')
			</if>
			<if test="bizKindId != null and bizKindId > -1 ">
				AND BIZ_KIND_ID = #{bizKindId}
			</if>
			<if test="bizId != null and bizId > -1 ">
				AND BIZ_ID = #{bizId}
			</if>
			<if test="fullProcKey != null">
				AND PROC_KEY = #{fullProcKey}
			</if>
			<if test="nodeProcId != null and nodeProcId > 0 ">
				AND NODE_PROC_ID != #{nodeProcId}
			</if>
		</where>
	</select>

	<select id="getNextSequence" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT NVL(MAX(SEQUENCE),0) + 1 FROM PA_NODE_PROC WHERE BIZ_ID = #{bizId} AND
		BIZ_KIND_ID = #{bizKindId}
	</select>

</mapper>