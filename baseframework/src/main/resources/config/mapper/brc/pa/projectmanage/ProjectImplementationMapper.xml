<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brc.pa.projectmanage.mapper.ProjectImplementationMapper">
	<insert id="insert" parameterType="projectImplementation">
		INSERT INTO PA_PROJECT_IMPLEMENTATION(IMPLEMENTATION_ID, PROJECT_ID, OPER_NAME, OPER_TIME, CONTENT, DESCRIPTION)
		VALUES(PA_ID_SEQ.nextval,${projectId}, #{operName, jdbcType=VARCHAR}, #{operTime, jdbcType=TIMESTAMP}, #{content, jdbcType=VARCHAR}, #{description, jdbcType=VARCHAR})
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO PA_PROJECT_IMPLEMENTATION(IMPLEMENTATION_ID, PROJECT_ID, OPER_NAME, OPER_TIME, CONTENT, DESCRIPTION)
		SELECT PA_ID_SEQ.nextval,t.*,PA_VERSION_SEQ.nextval FROM (
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT ${item.projectId} as PROJECT_ID, #{item.operName, jdbcType=VARCHAR} as OPER_NAME,
			#{item.operTime, jdbcType=TIMESTAMP} as OPER_TIME, #{item.content, jdbcType=VARCHAR} as CONTENT,
			#{item.description, jdbcType=VARCHAR} as DESCRIPTION FROM DUAL
		</foreach>
		) t
	</insert>

	<delete id="delete" parameterType="java.lang.Long">
		DELETE FROM PA_PROJECT_IMPLEMENTATION WHERE IMPLEMENTATION_ID = #{implementationId}
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM PA_PROJECT_IMPLEMENTATION WHERE IMPLEMENTATION_ID IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="update" parameterType="projectImplementation">
		UPDATE PA_PROJECT_IMPLEMENTATION
		<set>
			<if test="projectId != null">
				PROJECT_ID=${projectId},
			</if>
			<if test="operName != null">
				OPER_NAME=#{operName, jdbcType=VARCHAR},
			</if>
			<if test="operTime != null">
				OPER_TIME=#{operTime, jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				CONTENT=#{content, jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION=#{description, jdbcType=VARCHAR},
			</if>
		</set>
		WHERE IMPLEMENTATION_ID = ${implementationId}
	</update>

	<select id="load" parameterType="java.lang.Long" resultType="projectImplementation">
		SELECT IMPLEMENTATION_ID as implementationId, PROJECT_ID as projectId, OPER_NAME as operName, OPER_TIME as operTime, CONTENT as content, DESCRIPTION as description
		FROM PA_PROJECT_IMPLEMENTATION WHERE IMPLEMENTATION_ID=#{implementationId}
	</select>

	<select id="queryAll" parameterType="java.util.Map" resultType="projectImplementation">
		SELECT IMPLEMENTATION_ID as implementationId, PROJECT_ID as projectId, OPER_NAME as operName, OPER_TIME as
		operTime, CONTENT as content, DESCRIPTION as description FROM PA_PROJECT_IMPLEMENTATION
		<where>
			<if test="projectId != null and projectId > -1 ">
				AND PROJECT_ID = ${projectId}
			</if>
			<if test="content != null">
				AND CONTENT = #{content}
			</if>
		</where>
		ORDER BY OPER_TIME DESC
	</select>

	<select id="slicedQuery" parameterType="java.util.Map" resultType="projectImplementation">
		<!-- SELECT t.IMPLEMENTATION_ID as implementationId, t.PROJECT_ID as projectId, t.OPER_NAME as operName, t.OPER_TIME as operTime, t.CONTENT as content, t.DESCRIPTION 
			as description,t1.NAME as projectName FROM PA_PROJECT_IMPLEMENTATION t,MD_PROJECT t1 <where> t.project_id=t1.project_id <if test="projectId != null and projectId 
			> -1 "> AND t.PROJECT_ID = ${projectId} </if> <if test="content != null"> AND t.CONTENT like concat(concat('%',#{content}),'%') </if> <if test="operName != null"> 
			AND t.CONTENT like concat(concat('%',#{operName}),'%') </if> </where> ORDER BY ${sortname} ${sortorder} OFFSET (${page}-1)*${pagesize} ROWS FETCH NEXT ${pagesize} 
			ROWS ONLY -->
		SELECT IMPLEMENTATION_ID as implementationId, PROJECT_ID as projectId, OPER_NAME as operName, OPER_TIME as operTime, CONTENT as content, DESCRIPTION as
		description,NAME as projectName
		FROM (select t.IMPLEMENTATION_ID, t.PROJECT_ID, t.OPER_NAME, t.OPER_TIME, t.CONTENT, t.DESCRIPTION,t1.NAME,ROWNUM RN FROM PA_PROJECT_IMPLEMENTATION t,MD_PROJECT t1
		<where>
			t.project_id=t1.project_id
			<if test="projectId != null and projectId > -1 ">
				AND t.PROJECT_ID = ${projectId}
			</if>
			<if test="content != null">
				AND t.CONTENT like concat(concat('%',#{content}),'%')
			</if>
			<if test="operName != null">
				AND t.CONTENT like concat(concat('%',#{operName}),'%')
			</if>
		</where>
		ORDER BY ${sortname} ${sortorder}
		)
		WHERE RN > (${page}-1)*${pagesize} AND RN &lt;= ${page}*${pagesize}

	</select>

	<select id="getRecordCount" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT COUNT(0) FROM PA_PROJECT_IMPLEMENTATION
		<where>
			<if test="projectId != null and projectId > -1 ">
				AND PROJECT_ID = ${projectId}
			</if>
			<if test="content != null">
				AND CONTENT like concat(concat('%',#{content}),'%')
			</if>
			<if test="operName != null">
				AND CONTENT like concat(concat('%',#{operName}),'%')
			</if>
		</where>
	</select>

</mapper>