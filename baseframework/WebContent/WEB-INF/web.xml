<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<!-- proxool -->
	<servlet>
		<servlet-name>Admin</servlet-name>
		<servlet-class>org.logicalcobwebs.proxool.admin.servlet.AdminServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Admin</servlet-name>
		<url-pattern>/proxoolmanager</url-pattern>
	</servlet-mapping>
	<!-- proxool end -->
	<listener>
		<listener-class>com.brc.client.SessionListener</listener-class>
	</listener>
	<filter>
		<filter-name>plug-in</filter-name>
		<filter-class>com.brc.system.plugIn.PlugInFilter</filter-class>
	</filter>
	<!--不让.view的请求经过struts2过滤器 iwebOffice使用免得inputStream被提前读取了-->
	<filter-mapping>
		<filter-name>plug-in</filter-name>
		<url-pattern>*.view</url-pattern>
	</filter-mapping>
	<!-- 用于初始化Spring容器的Listener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 定义整合SiteMesh必须的StrutsPrepareFilter(Struts2.1.3之后) Filter -->
	<filter>
		<filter-name>struts-prepare</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
	</filter>
	<!-- 定义整合SiteMesh和核心 Filter -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
	<!-- 定义Struts2的StrutsPrepareAndExecuteFilter(Struts2.1.3之后)的Filter -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter>
		<filter-name>struts-execute</filter-name> 
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class> 
	</filter>
	<filter-mapping> 
		<filter-name>struts-prepare</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>
	<filter-mapping> 
		<filter-name>sitemesh</filter-name> 
		<url-pattern>*.do</url-pattern> 
	</filter-mapping>
	<filter-mapping> 
		<filter-name>sitemesh</filter-name> 
		<url-pattern>*.jsp</url-pattern> 
	</filter-mapping>
	<filter-mapping> 
		<filter-name>sitemesh</filter-name> 
		<url-pattern>*.job</url-pattern> 
	</filter-mapping>
	<filter-mapping> 
		<filter-name>sitemesh</filter-name> 
		<url-pattern>*.print</url-pattern> 
	</filter-mapping>
	<filter-mapping> 
		<filter-name>sitemesh</filter-name> 
		<url-pattern>*.mprint</url-pattern> 
	</filter-mapping>
	<filter-mapping> 
		<filter-name>struts-execute</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping> 
	<!-- FilterDispatcher用来初始化struts2并且处理所有的WEB请求。 -->
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/ws/*</url-pattern>
	</servlet-mapping>
	<!-- 生成验证码图片servlet -->
	<servlet>
		<servlet-name>AuthRandomImg</servlet-name>
		<servlet-class>com.brc.client.AuthRandomImg</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>AuthRandomImg</servlet-name>
		<url-pattern>/random.img</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>Index.jsp</welcome-file>
	</welcome-file-list>
    <distributable/>
	<session-config>
		<session-timeout>90</session-timeout>
	</session-config>
</web-app>
