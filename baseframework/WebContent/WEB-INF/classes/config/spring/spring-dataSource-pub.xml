<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="jdbcUrl"  value="${pub.db.url}"/>
		<property name="user" value="${pub.db.user}"/>
		<property name="password" value="${pub.db.password}"/>
		<property name="maxPoolSize" value="20"/>
		<property name="minPoolSize" value="5"/>
		<property name="initialPoolSize" value="5"/>
		<property name="maxIdleTime" value="20"/>
	</bean>

	<!--
			org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor
			有些简单的数据源仅对 Connection 对象进行代理，这时可以直接使用 SimpleNativeJdbcExtractor 实现类。
			但有些数据源（如 Jakarta Commons DBCP）会对所有的 JDBC 对象进行代理，这时，就需要根据具体的情况选择适合的抽取器实现类了。
				  下表列出了不同数据源本地 JDBC 对象抽取器的实现类：
			WebSphere 4 及以上版本的数据源	org.springframework.jdbc.support.nativejdbc.WebSphereNativeJdbcExtractor
			WebLogic 6.1+ 及以上版本的数据源	org.springframework.jdbc.support.nativejdbc.WebLogicNativeJdbcExtractor
			JBoss 3.2.4 及以上版本的数据源	org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor
			C3P0 数据源	org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor
			DBCP 数据源	org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor
			ObjectWeb 的 XAPool 数据源	org.springframework.jdbc.support.nativejdbc.XAPoolNativeJdbcExtractor 
		 -->
	<bean id="nativeJdbcExtractor" lazy-init="true" class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		lazy-init="default" autowire="default">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>
