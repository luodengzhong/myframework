<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brc.pa.basedata.mapper.EventDefineMapper">
	<insert id="insert" parameterType="eventDefine">
		INSERT INTO PA_EVENT_DEFINE(EVENT_DEFINE_ID, NODE_KIND_ID, PARENT_ID, CODE, NAME, KIND_ID, URL, DESCRIPTION, FULL_ID,
		SEQUENCE, VERSION)
		VALUES(PA_ID_SEQ.nextval,${nodeKindId}, ${parentId}, #{code, jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR}, ${kindId}, #{url,
		jdbcType=VARCHAR}, #{description,
		jdbcType=VARCHAR}, #{fullId, jdbcType=VARCHAR}||'/'||PA_ID_SEQ.nextval, ${sequence}, PA_VERSION_SEQ.nextval)
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO PA_EVENT_DEFINE(EVENT_DEFINE_ID, NODE_KIND_ID, PARENT_ID, CODE, NAME, KIND_ID, URL, DESCRIPTION, FULL_ID, SEQUENCE, VERSION)
		SELECT
		PA_ID_SEQ.nextval,t.*,PA_VERSION_SEQ.nextval FROM (
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT ${item.nodeKindId} as NODE_KIND_ID, ${item.parentId} as PARENT_ID, #{item.code,
			jdbcType=VARCHAR} as CODE, #{item.name, jdbcType=VARCHAR} as NAME,
			${item.kindId} as KIND_ID, #{item.url, jdbcType=VARCHAR} as URL, #{item.description,
			jdbcType=VARCHAR} as DESCRIPTION, #{item.fullId, jdbcType=VARCHAR} as
			FULL_ID, ${item.sequence} as SEQUENCE FROM DUAL
		</foreach>
		) t
	</insert>


	<delete id="delete" parameterType="java.lang.Long">
		DELETE FROM PA_EVENT_DEFINE WHERE EVENT_DEFINE_ID = #{eventDefineId}
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM PA_EVENT_DEFINE WHERE EVENT_DEFINE_ID IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="update" parameterType="eventDefine">
		UPDATE PA_EVENT_DEFINE
		<set>
			<if test="nodeKindId != null">
				NODE_KIND_ID=${nodeKindId},
			</if>
			<if test="parentId != null">
				PARENT_ID=${parentId},
			</if>
			<if test="code != null">
				CODE=#{code, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME=#{name, jdbcType=VARCHAR},
			</if>
			<if test="kindId != null">
				KIND_ID=${kindId},
			</if>
			<if test="url != null">
				URL=#{url, jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION=#{description, jdbcType=VARCHAR},
			</if>
			<if test="fullId != null">
				FULL_ID=#{fullId, jdbcType=VARCHAR},
			</if>
			<if test="sequence != null">
				SEQUENCE=${sequence},
			</if>
		</set>
		WHERE EVENT_DEFINE_ID = #{eventDefineId}
	</update>

	<update id="updateSequence" parameterType="eventDefine">
		UPDATE PA_EVENT_DEFINE SET SEQUENCE = #{sequence}
		WHERE EVENT_DEFINE_ID = #{eventDefineId}
	</update>

	<update id="move" parameterType="java.util.Map">
		update PA_EVENT_DEFINE set PARENT_ID = ${parentId},FULL_ID = #{fullId} where EVENT_DEFINE_ID=${eventDefineId}
	</update>

	<select id="load" parameterType="java.lang.Long" resultType="eventDefine">
		SELECT EVENT_DEFINE_ID as eventDefineId, NODE_KIND_ID as nodeKindId, PARENT_ID as parentId,
		CODE as code, NAME as name, KIND_ID as kindId, URL as url, DESCRIPTION as
		description, FULL_ID as fullId, SEQUENCE as sequence, VERSION as version FROM
		PA_EVENT_DEFINE WHERE EVENT_DEFINE_ID=#{eventDefineId}
	</select>

	<select id="queryAll" parameterType="java.util.Map" resultType="eventDefine">
		SELECT EVENT_DEFINE_ID as eventDefineId, NODE_KIND_ID as nodeKindId, PARENT_ID as parentId, CODE as code, NAME
		as name, KIND_ID as kindId, URL as url,
		DESCRIPTION as description, FULL_ID as fullId, SEQUENCE as sequence,
		VERSION as version FROM PA_EVENT_DEFINE
		<where>
			<if test="nodeKindId != null and nodeKindId > -1 ">
				AND NODE_KIND_ID = #{nodeKindId}
			</if>
			<if test="parentId != null and parentId > 0">
				AND PARENT_ID = ${parentId}
			</if>
			<if test="code != null">
				AND CODE = like concat(concat('%',#{code}),'%')
			</if>
			<if test="name != null">
				AND NAME like concat(concat('%',#{fullId}),'%')
			</if>
			<if test="fullId != null">
				AND FULL_ID like concat(#{fullId},'%')
			</if>
		</where>
		ORDER BY SEQUENCE ASC
	</select>

	<select id="slicedQuery" parameterType="java.util.Map" resultType="eventDefine">
		<!-- SELECT EVENT_DEFINE_ID as eventDefineId, NODE_KIND_ID as nodeKindId, PARENT_ID as parentId, CODE as code, NAME as name, KIND_ID as kindId, URL as url, DESCRIPTION 
			as description, FULL_ID as fullId, SEQUENCE as sequence, VERSION as version FROM PA_EVENT_DEFINE ORDER BY ${sortname} ${sortorder} OFFSET (${page}-1)*${pagesize} 
			ROWS FETCH NEXT ${pagesize} ROWS ONLY -->
		SELECT EVENT_DEFINE_ID as eventDefineId, NODE_KIND_ID as nodeKindId, PARENT_ID as parentId, CODE as code, NAME as name, KIND_ID as kindId, URL as url,
		DESCRIPTION as description, FULL_ID as fullId, SEQUENCE as sequence, VERSION as version FROM (select t.EVENT_DEFINE_ID, t.NODE_KIND_ID, t.PARENT_ID, t.CODE, t.NAME, t.KIND_ID, t.URL, t.DESCRIPTION, t.FULL_ID, t.SEQUENCE, t.VERSION,ROWNUM RN FROM PA_EVENT_DEFINE t
		<where>
			<if test="nodeKindId != null and nodeKindId > -1 ">
				AND NODE_KIND_ID = #{nodeKindId}
			</if>
			<if test="parentId != null and parentId > 0">
				AND PARENT_ID = ${parentId}
			</if>
			<if test="fullId != null">
				AND FULL_ID like concat(#{fullId},'%')
			</if>
			<if test="code != null">
				AND CODE like concat(concat('%',#{code}),'%')
			</if>
			<if test="name != null">
				AND NAME like concat(concat('%',#{name}),'%')
			</if>
		</where>
		ORDER BY ${sortname} ${sortorder}
		)
		WHERE RN > (${page}-1)*${pagesize} AND RN &lt;= ${page}*${pagesize}

	</select>

	<select id="getRecordCount" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT COUNT(0) FROM PA_EVENT_DEFINE
		<where>
			<if test="nodeKindId != null and nodeKindId > -1 ">
				AND NODE_KIND_ID = #{nodeKindId}
			</if>
			<if test="parentId != null and parentId > -1 ">
				AND PARENT_ID = #{parentId}
			</if>
			<if test="fullId != null">
				AND FULL_ID like concat(#{fullId},'%')
			</if>
			<if test="code != null">
				AND CODE like concat(concat('%',#{code}),'%')
			</if>
			<if test="name != null">
				AND NAME like concat(concat('%',#{name}),'%')
			</if>
			<if test="fullCode != null">
				AND CODE = #{fullCode}
			</if>
			<if test="eventDefineId != null and eventDefineId > 0">
				AND EVENT_DEFINE_ID != #{eventDefineId}
			</if>
		</where>
	</select>

	<select id="getNextSequence" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT NVL(MAX(SEQUENCE),0) + 1 FROM PA_EVENT_DEFINE WHERE PARENT_ID = #{parentId}
	</select>

</mapper>